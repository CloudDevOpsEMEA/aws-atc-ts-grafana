---
- name: Grafana Provisioning Role
  block:

    - name:  Get the private and public ip of the host running graphite/grafana/statsd
      set_fact:
        graphite_private_ip: "{{ groups[group_name] | map('extract', hostvars, 'private_ip_address') | list | first }}"
        grafana_public_dns: "{{ groups[group_name] | map('extract', hostvars, 'public_dns_name') | list | first }}"
        graphite_public_dns: "{{ groups[group_name] | map('extract', hostvars, 'public_dns_name') | list | first }}"
        statsd_public_dns: "{{ groups[group_name] | map('extract', hostvars, 'public_dns_name') | list | first }}"
      vars:
        group_name: "tag_Role_graphite_grafana"


      ### Create Graphite datasource for Grafana metricss ###
    - name: Process grafana datasource for graphite jinja template and store result in output folder
      template:
        src: templates/datasource_graphite.json.j2
        dest: "{{ outputfolder }}/grafana_datasource_graphite.json"
        mode: 0644

    - name: Check of grafana datasource for graphite already exists
      uri:
        url: "http://{{ grafana_public_dns }}:3000/api/datasources/name/{{ datasource_name }}"
        user: admin
        password: admin
        method: GET
        force_basic_auth: yes
      register: get_result_datasource
      failed_when: false

    - name: Add graphite datasource into grafana
      uri:
        url: "http://{{ grafana_public_dns }}:3000/api/datasources"
        user: admin
        password: admin
        method: POST
        body: "{{ lookup('file','{{ outputfolder }}/grafana_datasource_graphite.json') }}"
        force_basic_auth: yes
        status_code: 200
        body_format: json
        when: get_result_datasource.status == 404


    ### Create Grafana dashboard for StatsD metricss ###
    - name: Process grafana dashboard for statsd jinja template and store result in output folder
      template:
        src: templates/statsd_dashboard.json.j2
        dest: "{{ outputfolder }}/grafana_statsd_dashboard.json"
        mode: 0644

    - name: Check if grafana dashboard for statsd already exists
      uri:
        url: "http://{{ grafana_public_dns }}:3000/api/dashboards/uid/{{ dashboard_uid }}"
        user: admin
        password: admin
        method: GET
        force_basic_auth: yes
      register: get_result_dashboard
      failed_when: false
        
    - name: Add graphite statsd dashboard into grafana
      uri:
        url: "http://{{ grafana_public_dns }}:3000/api/dashboards/db"
        user: admin
        password: admin
        method: POST
        body: >
          {
            "dashboard": {{ lookup('file','{{ outputfolder }}/grafana_statsd_dashboard.json') }},
            "folderId": 0,
            "overwrite": true
          }
        force_basic_auth: yes
        status_code: 200
        body_format: json
      when: get_result_dashboard.status == 404

  always:
    - name: Print the URLs for Grafana / Graphite / Statsd verification
      debug:
        msg: >
          Verify if metrics and/or events are arriving at the following admin UIs
            > Grafana UI   : http://{{ grafana_public_dns }}:3000
            > Graphite UI  : http://{{ graphite_public_dns }}:80
            > StatsD Admin : echo "gauges" | nc {{ statsd_public_dns }} 8126
